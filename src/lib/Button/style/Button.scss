@import "../../style/common.scss";

$h: 32px;
$border-color: #d9d9d9;
$color: #333;
$blue: #40a9ff;
$radius: 4px;
$red: red;
$grey: grey;

.coast-button {
  box-sizing: border-box;
  height: $h;
  padding: 0 12px;
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  white-space: nowrap;
  background: white;
  color: $colorGray;
  border: 1px solid $borderColorGray;
  border-radius: $radius;
  box-shadow: 0 1px 0 fade-out(black, 0.95);
  transition: all 0.25s;

  & + & {
    margin-left: 8px;
  }

  &:hover,
  &:focus {
    color: $theme;
    border-color: $theme;
  }

  &:focus {
    outline: none;
  }

  &::-moz-focus-inner {
    border: 0;
  }

  &.coast-button-theme-link {
    &.coast-button-level-main {
      color: $theme;
    }
    border-color: transparent;
    box-shadow: none;
    text-decoration: underline;

    &:hover,
    &:focus {
      color: #40a9ff;
    }
  }

  &.coast-button-theme-text {
    border-color: transparent;
    box-shadow: none;
    color: inherit;

    &:hover,
    &:focus {
      background: darken(white, 5%);
    }
  }

  &.coast-button-size-big {
    font-size: 24px;
    height: 48px;
    padding: 0 16px;
  }

  &.coast-button-size-small {
    font-size: 12px;
    height: 20px;
    padding: 0 4px;
  }

  &.coast-button-theme-button {
    &.coast-button-level-main {
      background: $theme;
      color: white;
      border-color: $theme;

      &:hover,
      &:focus {
        background: darken($theme, 10%);
        border-color: darken($theme, 10%);
      }
    }

    &.coast-button-level-danger {
      background: $error;
      border-color: $error;
      color: white;

      &:hover,
      &:focus {
        background: darken($error, 10%);
        border-color: darken($error, 10%);
      }
    }

    &.coast-button-level-warning {
      background: $warning;
      border-color: $warning;
      color: white;

      &:hover,
      &:focus {
        background: darken($warning, 10%);
        border-color: darken($warning, 10%);
      }
    }
  }

  &.coast-button-theme-link {
    &.coast-button-level-danger {
      color: $error;
      &:hover,
      &:focus {
        color: darken($error, 10%);
      }
    }

    &.coast-button-level-warning {
      color: $warning;

      &:hover,
      &:focus {
        color: darken($warning, 10%);
      }
    }
  }

  &.coast-button-theme-text {
    &.coast-button-level-main {
      color: $theme;

      &:hover,
      &:focus {
        color: darken($theme, 10%);
      }
    }

    &.coast-button-level-danger {
      color: $error;

      &:hover,
      &:focus {
        color: darken($error, 10%);
      }
    }

    &.coast-button-level-warning {
      color: $warning;

      &:hover,
      &:focus {
        color: darken($warning, 10%);
      }
    }
  }

  &.coast-button-theme-button {
    &[disabled] {
      cursor: not-allowed;
      color: $disabledColor;

      &:hover {
        color: $colorGray;
        border: 1px solid $borderColorGray;
      }
    }
  }

  &.coast-button-theme-link,
  &.coast-button-theme-text {
    &[disabled] {
      cursor: not-allowed;
      color: $disabledColor;

      &:hover {
        background: transparent;
      }
    }
  }

  &.coast-button-loading {
    cursor: default;
    position: relative;

    &[disabled] {
      cursor: default;
      color: $colorGray;

      &:hover {
        color: $colorGray;
        border: 1px solid $borderColorGray;
      }
    }

    &::before {
      position: absolute;
      content: "";
      top: -1px;
      left: -1px;
      right: -1px;
      bottom: -1px;
      z-index: 1;
      border-radius: inherit;
      background: #fff;
      opacity: 0.35;
      transition: opacity 0.2s;
      pointer-events: none;
    }

    &:hover,
    &:focus {
      color: inherit;
      border-color: $borderColorGray;
    }

    > .coast-button-loadingIndicator {
      margin-right: 4px;
      animation: coast-spin 1s infinite linear;
    }

    &.coast-button-level-warning,
    &.coast-button-level-danger,
    &.coast-button-level-main {
      &[disabled] {
        color: #fff;
      }

      &:hover,
      &:focus {
        color: white;
        border-color: $borderColorGray;
        background-color: $theme;
      }

      > .coast-loadingIndicator {
        border-color: white white white transparent;
      }
    }

    &.coast-button-level-warning {
      &:hover,
      &:focus {
        background-color: $warning;
      }
    }

    &.coast-button-level-danger {
      &:hover,
      &:focus {
        background-color: $error;
      }
    }
  }
}

@keyframes coast-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.yun-loadingIndicator {
  width: 14px;
  height: 14px;
  display: inline-block;
  margin-right: 4px;
  border-radius: 8px;
  border-color: $blue $blue $blue transparent;
  border-style: solid;
  border-width: 2px;
  animation: gulu-spin 1s infinite linear;
}

@keyframes gulu-spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

/* sword */
.orbit-spinner {
  display: inline-block;
  margin-right: 4px;
  height: 12px;
  width: 12px;
  border-radius: 50%;
  perspective: 800px;
  .orbit {
    position: absolute;
    width: 100%;
    height: 100%;
    border-radius: 50%;

    &:nth-child(1) {
      left: 0%;
      top: 0%;
      animation: orbit-spinner-orbit-one-animation 1200ms linear infinite;
      border-bottom: 3px solid $blue;
    }
    &:nth-child(2) {
      right: 0%;
      top: 0%;
      animation: orbit-spinner-orbit-two-animation 1200ms linear infinite;
      border-right: 3px solid $blue;
    }
    &:nth-child(3) {
      right: 0%;
      bottom: 0%;
      animation: orbit-spinner-orbit-three-animation 1200ms linear infinite;
      border-top: 3px solid $blue;
    }
  }
}

@keyframes orbit-spinner-orbit-one-animation {
  0% {
    transform: rotateX(35deg) rotateY(-45deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(35deg) rotateY(-45deg) rotateZ(360deg);
  }
}

@keyframes orbit-spinner-orbit-two-animation {
  0% {
    transform: rotateX(50deg) rotateY(10deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(50deg) rotateY(10deg) rotateZ(360deg);
  }
}

@keyframes orbit-spinner-orbit-three-animation {
  0% {
    transform: rotateX(35deg) rotateY(55deg) rotateZ(0deg);
  }
  100% {
    transform: rotateX(35deg) rotateY(55deg) rotateZ(360deg);
  }
}

/* checked */
.checked-style {
  margin-right: 6px;
  width: 6px;
  height: 10px;
  border-color: $blue;
  border-style: solid;
  border-width: 0 2px 2px 0;
  transform: rotate(45deg);
}

/* circle-loading */
.circle-loading {
  position: relative;
  display: inline-block;
  margin-right: 4px;
  width: 14px;
  height: 14px;
  border-radius: 50%;
  border-top: 2px solid #ff6b6b;
  animation: gulu-spin 1s linear infinite;
  &::before,
  &::after {
    content: "";
    position: absolute;
    left: 0;
    top: -2px;
    width: 14px;
    height: 14px;
    border-radius: 50%;
  }
  &::before {
    border-top: 2px solid #1dd1a1;
    transform: rotate(120deg);
  }
  &::after {
    border-top: 2px solid #54a0ff;
    transform: rotate(240deg);
  }
}
